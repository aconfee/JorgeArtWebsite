{"version":3,"sources":["about/about.controller.js","home/home.controller.js","app.js","common/services/projectsGallery.service.js","common/directives/exampleDirective/example.directive.js","common/directives/navigationBar/navigationBar.directive.js"],"names":["aboutController","$scope","viewModel","this","myVariable","homeController","$window","ProjectsGalleryService","projects","GetProjects","angular","element","bind","console","log","$apply","exampleData","exampleItem","config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","module","$inject","service","projectsDto","image","aspect","MapProjectsDtoToVm","GetRowSize","rowSize","innerWidth","smallScreenMax","mediumScreenMax","undefined","error","length","Array","isArray","projectGroups","rows","y","push","x","projectsIndex","exampleDirective","restrict","scope","content","directive","navigationBar"],"mappings":"AAKA,QAAAA,iBAAAC,GACA,GAAAC,GAAAC,IAEAD,GAAAE,WAAA,4BCHA,QAAAC,gBAAAJ,EAAAK,EAAAC,GACA,GAAAL,GAAAC,IAGAD,GAAAM,SAAAD,EAAAE,cAIAC,QAAAC,QAAAL,GAAAM,KAAA,SAAA,WAEAC,QAAAC,IAAA,wBACAZ,EAAAM,SAAAD,EAAAE,cACAR,EAAAc,WAGAb,EAAAc,aACAC,YAAA,yECjBA,WAMA,QAAAC,GAAAC,EAAAC,GACAD,EACAE,KAAA,KACAC,YAAA,sBACAC,WAAA,iBACAC,aAAA,cAEAH,KAAA,UACAC,YAAA,wBACAC,WAAA,kBACAC,aAAA,cAEAC,WAAAC,WAAA,MAGAN,EAAAO,WAAA,GAlBAjB,QAAAkB,OAAA,sBAAA,YAsBAlB,QACAkB,OAAA,sBACAV,QAAA,iBAAA,oBAAAA,OF/BAR,QACAkB,OAAA,sBACAL,WAAA,kBAAAvB,iBAEAA,gBAAA6B,SAAA,UCJAnB,QACAkB,OAAA,sBACAL,WAAA,iBAAAlB,gBAEAA,eAAAwB,SAAA,SAAA,UAAA,0BEJA,WASA,QAAAtB,GAAAD,GACA,GAAAwB,GAAA3B,IAKA2B,GAAArB,YAAA,WAGA,GAAAsB,KACAC,MAAA,qBAAAC,OAAA,OACAD,MAAA,qBAAAC,OAAA,OACAD,MAAA,qBAAAC,OAAA,OACAD,MAAA,qBAAAC,OAAA,OACAD,MAAA,sBAAAC,OAAA,QACAD,MAAA,qBAAAC,OAAA,MAGA,OAAAC,GAAAH,GAOA,IAAAI,GAAA,WACA,GAAAC,GAAA,CAUA,OARA9B,GAAA+B,WAAAC,IACAF,EAAA,GAGA9B,EAAA+B,WAAAE,IACAH,EAAA,GAGAA,GAOAF,EAAA,SAAA1B,GACA,GAAAgC,SAAAhC,EAEA,WADAK,SAAA4B,MAAA,yBAIA,IAAA,IAAAjC,EAAAkC,OAEA,WADA7B,SAAA4B,MAAA,qCAIA,IAAAE,MAAAC,QAAApC,MAAA,EAEA,WADAK,SAAA4B,MAAA,kCAIA,IAAAL,GAAAD,IACAU,KACAC,EAAAtC,EAAAkC,OAAAN,CAEA,KAAAU,IAAAA,EAAA,EAEA,KAAA,GAAAC,GAAA,EAAAD,EAAAC,EAAAA,IAAA,CACAF,EAAAG,QAEA,KAAA,GAAAC,GAAA,EAAAb,EAAAa,EAAAA,IAAA,CAEA,GAAAC,GAAAd,EAAAW,EAAAE,CACA,IAAAC,IAAA1C,EAAAkC,OAAA,KAEAG,GAAAE,GAAAC,KAAAxC,EAAA0C,KAIA,MAAAL,IArFAnC,QACAkB,OAAA,sBACAE,QAAA,yBAAAvB,EAEA,IAAA+B,GAAA,IACAC,EAAA,GAEAhC,GAAAsB,SAAA,cCRA,WAKA,QAAAsB,KACA,OACAC,SAAA,KACAC,OACAC,QAAA,YAEAhC,YAAA,8DAVAZ,QACAkB,OAAA,sBACA2B,UAAA,mBAAAJ,MCHA,WAKA,QAAAK,KACA,OACAJ,SAAA,KACA9B,YAAA,iEAPAZ,QACAkB,OAAA,sBACA2B,UAAA,gBAAAC","file":"dist.min.js","sourcesContent":["angular\n  .module('PortfolioSPAModule')\n  .controller('aboutController', aboutController);\n\naboutController.$inject = ['$scope'];\nfunction aboutController($scope){\n  var viewModel = this;\n\n  viewModel.myVariable = \"I'm pretty cool, I guess.\";\n}\n","angular\n  .module('PortfolioSPAModule')\n  .controller('homeController', homeController);\n\nhomeController.$inject = ['$scope', '$window', 'ProjectsGalleryService'];\nfunction homeController($scope, $window, ProjectsGalleryService){\n  var viewModel = this;\n\n  // TODO: Make the main gallery a directive and pass projectRows into it.\n  viewModel.projects = ProjectsGalleryService.GetProjects();\n\n  // Turn into a service to return screen width and height.\n  // This service should have a method to just get num of rows that should display.\n  angular.element($window).bind('resize', function () {\n    // Possiblity to cache here... if necessary.\n    console.log(\"controller resizing.\");\n    viewModel.projects = ProjectsGalleryService.GetProjects();\n    $scope.$apply();\n  });\n\n  viewModel.exampleData = {\n    exampleItem: 'Example text from home controller being passed to example-directive.'\n  };\n}\n","/*\n* Angular application.\n*/\n\n(function(){\n\n  // Define the app module and it's dependencies.\n  angular.module('PortfolioSPAModule', ['ngRoute']);\n\n  // Create a config for our app -- configure our routes.\n  function config ($routeProvider, $locationProvider){\n    $routeProvider\n      .when('/', {\n        templateUrl: 'home/home.view.html',\n        controller: 'homeController',\n        controllerAs: 'viewModel'\n      })\n      .when('/about', {\n        templateUrl: 'about/about.view.html',\n        controller: 'aboutController',\n        controllerAs: 'viewModel'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // Pretty up URLs. Base defined in index.html.\n    $locationProvider.html5Mode(true);\n  }\n\n  // Add the config to our app.\n  angular\n    .module('PortfolioSPAModule')\n    .config(['$routeProvider', '$locationProvider', config]);\n\n})();\n","(function(){\n  angular\n    .module('PortfolioSPAModule')\n    .service('ProjectsGalleryService', ProjectsGalleryService);\n\n  var smallScreenMax = 600;\n  var mediumScreenMax = 1000;\n\n  ProjectsGalleryService.$inject = ['$window'];\n  function ProjectsGalleryService($window){\n    var service = this;\n\n    ///\n    /// Call out to our API to get projects.\n    ///\n    service.GetProjects = function(){\n      // Get aspect ratio and store in db when uploaded.\n      // Replace with $http call.\n      var projectsDto = [\n        {\"image\": \"/images/NoMan1.jpg\", \"aspect\": 0.665},\n        {\"image\": \"/images/NoMan2.jpg\", \"aspect\": 1.78},\n        {\"image\": \"/images/NoMan3.jpg\", \"aspect\": 1.77},\n        {\"image\": \"/images/NoMan4.jpg\", \"aspect\": 1.77},\n        {\"image\": \"/images/NoMan5.jpeg\", \"aspect\": 1.777},\n        {\"image\": \"/images/NoMan6.jpg\", \"aspect\": 1.77}\n      ];\n\n      return MapProjectsDtoToVm(projectsDto);\n    };\n\n    ///\n    /// Get the number of projects we want to show in a row based on how\n    /// big the screen is.\n    ///\n    var GetRowSize = function(){\n      var rowSize = 1;\n\n      if($window.innerWidth > smallScreenMax){\n        rowSize = 2;\n      }\n\n      if($window.innerWidth > mediumScreenMax){\n        rowSize = 3;\n      }\n\n      return rowSize;\n    };\n\n    ///\n    /// Take an array of projects and map them to a 2D array of relevent\n    /// project info to be used by the view.\n    ///\n    var MapProjectsDtoToVm = function(projects){\n      if(projects === undefined){\n        console.error(\"projects is undefined.\");\n        return;\n      }\n\n      if(projects.length === 0){\n        console.error(\"No projects in the projects array.\");\n        return;\n      }\n\n      if(Array.isArray(projects) === false){\n        console.error(\"Array of projects not provided.\");\n        return;\n      }\n\n      var rowSize = GetRowSize();\n      var projectGroups = [];\n      var rows = projects.length / rowSize;\n\n      if(rows === 0) rows = 1;\n\n      for (var y = 0; y < rows; y++) {\n        projectGroups.push([]);\n\n        for(var x = 0; x < rowSize; x++){\n          // Break if no projects remaining.\n          var projectsIndex = (rowSize * y) + x;\n          if(projectsIndex === projects.length) break;\n\n          projectGroups[y].push(projects[ projectsIndex ]);\n        }\n      }\n\n      return projectGroups;\n    };\n\n  }\n})();\n","(function(){\n  angular\n    .module('PortfolioSPAModule')\n    .directive('exampleDirective', exampleDirective);\n\n  function exampleDirective(){\n    return{\n      restrict:'EA',\n      scope:{\n        content: '=content'\n      },\n      templateUrl: '/common/directives/exampleDirective/example.directive.html'\n    };\n  }\n})();\n","(function(){\n  angular\n    .module('PortfolioSPAModule')\n    .directive('navigationBar', navigationBar);\n\n  function navigationBar(){\n    return{\n      restrict:'EA',\n      templateUrl: '/common/directives/navigationBar/navigationBar.directive.html'\n    };\n  }\n})();\n"],"sourceRoot":"/source/"}