{"version":3,"sources":["about/about.controller.js","app.js","projectPage/projectPage.controller.js","home/home.controller.js","common/services/dataMappingService.js","common/services/projectsService.js","common/services/responsiveService.js","common/directives/coverImage/coverImage.directive.js","common/directives/imageLightbox/imageLightbox.directive.js","common/directives/imageGallery/imageGallery.directive.js","common/directives/embededVideo/embededVideo.directive.js","common/directives/navigationBar/navigationBar.directive.js","common/directives/pageBreak/underline.directive.js","common/directives/textBlock/textBlock.directive.js"],"names":["aboutController","$scope","viewModel","this","myVariable","config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","angular","module","projectPageController","$window","$routeParams","ProjectsService","scrollTo","GetProjectPage","projectid","pageData","blogItems","$inject","homeController","$location","$sce","categoryFilter","search","category","videoLink","trustAsResourceUrl","showVideo","undefined","GetProjectsHomePage","projectsVm","projects","element","bind","DataMappingService","ResponsiveService","service","MapProjectDataToProjectPageVm","data","i","videos","length","source","push","textBlocks","coverImages","galleries","pageBreaks","sort","a","b","position","MapProjectsDataToHomePageVm","console","error","Array","isArray","rowSize","GetHomePageRowSize","projectRows","rows","projectsIndex","y","x","$http","allProjectsFilter","filmProjectsFilter","artProjectsFilter","projectId","callback","get","then","response","status","filteredProjectsList","FilterProjectsByCategory","mapped","log","filteredProjects","smallScreenMax","mediumScreenMax","innerWidth","coverImage","restrict","scope","content","directive","imageLightbox","imageGallery","selectedImage","imageGalleryController","ctrl","lightboxImage","GalleryThumbClick","image","imageThumbs","FormatImageList","$apply","GetNumberOfColumns","numCols","images","columns","numColumns","Math","ceil","imagesIndex","embededVideo","embededUrl","navigationBar","underlinePageBreak","textBlock"],"mappings":"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","file":"dist.min.js","sourcesContent":["angular\n  .module('PortfolioSPAModule')\n  .controller('aboutController', aboutController);\n\naboutController.$inject = ['$scope'];\nfunction aboutController($scope){\n  var viewModel = this;\n\n  viewModel.myVariable = \"I'm pretty cool, I guess.\";\n}\n","/*\n* Angular application.\n*/\n\n(function(){\n\n  // Define the app module and it's dependencies.\n  angular.module('PortfolioSPAModule', ['ngRoute']);\n\n  // Create a config for our app -- configure our routes.\n  function config ($routeProvider, $locationProvider){\n    $routeProvider\n      .when('/', {\n        templateUrl: 'home/home.view.html',\n        controller: 'homeController',\n        controllerAs: 'viewModel'\n      })\n      .when('/about', {\n        templateUrl: 'about/about.view.html',\n        controller: 'aboutController',\n        controllerAs: 'viewModel'\n      })\n      .when('/projects/:projectid', {\n        templateUrl: 'projectPage/projectPage.view.html',\n        controller: 'projectPageController',\n        controllerAs: 'viewModel'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // Pretty up URLs. Base defined in index.html.\n    $locationProvider.html5Mode(true);\n  }\n\n  // Add the config to our app.\n  angular\n    .module('PortfolioSPAModule')\n    .config(['$routeProvider', '$locationProvider', config]);\n\n})();\n","(function(){\n\n  angular\n    .module('PortfolioSPAModule')\n    .controller('projectPageController', projectPageController);\n\n  projectPageController.$inject = ['$window', '$routeParams', 'ProjectsService'];\n  function projectPageController($window, $routeParams, ProjectsService){\n    var viewModel = this;\n\n    // Make sure we always start at the top of the page.\n    $window.scrollTo(0, 0);\n\n    ProjectsService.GetProjectPage($routeParams.projectid, function(pageData){\n      viewModel.blogItems = pageData;\n    });\n  }\n\n})();\n","// Using function scopes to prevent global scope variables.\n// God, I can't wait to use typescript.\n(function(){\n\n  angular\n    .module('PortfolioSPAModule')\n    .controller('homeController', homeController);\n\n  homeController.$inject = ['$scope', '$window', '$location', '$sce', 'ProjectsService'];\n  function homeController($scope, $window, $location, $sce, ProjectsService){\n    var viewModel = this;\n    var categoryFilter = $location.search().category; // Once per 'page load'\n\n    viewModel.videoLink = $sce.trustAsResourceUrl(\"https://www.youtube.com/embed/CJ_GCPaKywg\");\n    viewModel.showVideo = categoryFilter === undefined; // Promo on 'all' page.\n\n    ///\n    /// Request the projects to disply on the home page.\n    ///\n    ProjectsService.GetProjectsHomePage(categoryFilter, function(projectsVm){\n      viewModel.projects = projectsVm;\n    });\n\n    ///\n    /// Re-get the projects if page is resized (getting projects will rebuild the rows\n    /// according to screen size).\n    /// TODO: Only get projects when resizing is done so we're not making a million calls.\n    ///\n    angular.element($window).bind('resize', function () {\n      // Possiblity to cache here... if necessary.\n      ProjectsService.GetProjectsHomePage(categoryFilter, function(projectsVm){\n        viewModel.projects = projectsVm;\n        //$scope.$apply(); // Not needed... two way bind automatically digests.\n      });\n    });\n  }\n\n})();\n","(function(){\n\n  angular\n    .module('PortfolioSPAModule')\n    .service('DataMappingService', DataMappingService);\n\n  DataMappingService.$inject = ['$sce', 'ResponsiveService'];\n  function DataMappingService($sce, ResponsiveService){\n    var service = this;\n\n    ///\n    /// Map the data returned by a project page to its view model.\n    ///\n     service.MapProjectDataToProjectPageVm = function(data){\n      var blogItems = [];\n\n      var i = 0;\n      for(i = 0; i < data.videos.length; i++){\n        // Trust the link provided and add.\n        data.videos[i].source = $sce.trustAsResourceUrl(data.videos[i].source);\n        blogItems.push(data.videos[i]);\n      }\n\n      for(i = 0; i < data.textBlocks.length; i++){\n        blogItems.push(data.textBlocks[i]);\n      }\n\n      for(i = 0; i < data.coverImages.length; i++){\n        blogItems.push(data.coverImages[i]);\n      }\n\n      for(i = 0; i < data.galleries.length; i++){\n        blogItems.push(data.galleries[i]);\n      }\n\n      for(i = 0; i < data.pageBreaks.length; i++){\n        blogItems.push(data.pageBreaks[i]);\n      }\n\n      // Sort the list by position\n      blogItems.sort(function(a, b) {\n        return a.position > b.position;\n      });\n\n      return blogItems;\n    };\n\n    ///\n    /// Take an array of projects and map them to a 2D array of relevent\n    /// project info to be used by the view.\n    ///\n    service.MapProjectsDataToHomePageVm = function(projects){\n      if(projects === undefined){\n        console.error(\"projects is undefined.\");\n        return;\n      }\n\n      if(projects.length === 0){\n        console.error(\"No projects in the projects array.\");\n        return;\n      }\n\n      if(Array.isArray(projects) === false){\n        console.error(\"Array of projects not provided.\");\n        return;\n      }\n\n      var rowSize = ResponsiveService.GetHomePageRowSize();\n      var projectRows = [];\n      var rows = projects.length / rowSize;\n\n      if(rows === 0) rows = 1;\n\n      var projectsIndex = 0;\n      for (var y = 0; y < rows; y++) {\n        projectRows.push([]);\n\n        for(var x = 0; x < rowSize; x++, projectsIndex++){\n          // Break if no projects remaining.\n          if(projectsIndex === projects.length) break;\n\n          projectRows[y].push(projects[ projectsIndex ]);\n        }\n      }\n\n      return projectRows;\n    };\n\n  }\n\n})();\n","(function(){\n\n  angular\n    .module('PortfolioSPAModule')\n    .service('ProjectsService', ProjectsService);\n\n  ProjectsService.$inject = ['$sce', '$http', 'DataMappingService'];\n  function ProjectsService($sce, $http, DataMappingService){\n    var service = this;\n\n    service.allProjectsFilter = undefined;\n    service.filmProjectsFilter = \"film\";\n    service.artProjectsFilter = \"art\";\n\n    ///\n    /// Get a project page by its id.\n    ///\n    service.GetProjectPage = function(projectId, callback){\n\n      $http.get('/api/projects/' + projectId).then(\n        function(response){\n          if(response.status === 200){\n            callback(DataMappingService.MapProjectDataToProjectPageVm(response.data));\n          }\n        },\n        function(response){\n          console.error(\"Something went wrong getting project page \" + projectId);\n          // TODO: Redirect to 404 not found.\n      });\n    };\n\n    ///\n    /// Get all projects as they are needed on the home page.\n    ///\n    service.GetProjectsHomePage = function(category, callback){\n\n      if(category !== service.allProjectsFilter &&\n        category !== service.filmProjectsFilter &&\n        category !== service.artProjectsFilter){\n          console.error(\"Invalid category provided: \" + category);\n          return;\n      }\n\n      $http.get('/api/projects/').then(\n        function(response){\n          if(response.status === 200){\n            var filteredProjectsList = FilterProjectsByCategory(response.data.projects, category);\n            var mapped =  DataMappingService.MapProjectsDataToHomePageVm(filteredProjectsList);\n\n            callback(mapped);\n          }\n        },\n        function(response){\n          console.log(\"Something went wrong while getting all projects.\");\n      });\n    };\n\n    ///\n    /// Filter the projects by the provided category.\n    ///\n    var FilterProjectsByCategory = function(projects, category){\n      var filteredProjects = [];\n\n      if(category === service.allProjectsFilter){\n        return projects;\n      }\n\n      for(var i = 0; i < projects.length; i++){\n        // If the project category matches, add it to our results.\n        if(projects[i].category === category){\n          filteredProjects.push(projects[i]);\n        }\n      }\n\n      return filteredProjects;\n    };\n  }\n\n})();\n","(function(){\n\n  angular\n    .module('PortfolioSPAModule')\n    .service('ResponsiveService', ResponsiveService);\n\n  ResponsiveService.$inject = ['$window'];\n  function ResponsiveService($window){\n    var service = this;\n\n    var smallScreenMax = 900;\n    var mediumScreenMax = 1500;\n\n    ///\n    /// Get the number of projects we want to show in a row based on how\n    /// big the screen is.\n    ///\n    service.GetHomePageRowSize = function(){\n      var rowSize = 1;\n\n      if($window.innerWidth > smallScreenMax){\n        rowSize = 2;\n      }\n\n      if($window.innerWidth > mediumScreenMax){\n        rowSize = 3;\n      }\n\n      return rowSize;\n    };\n  }\n\n})();\n","(function(){\n  angular\n    .module('PortfolioSPAModule')\n    .directive('coverImage', coverImage);\n\n  function coverImage(){\n    return{\n      restrict:'EA',\n      scope:{\n        content: '=content'\n      },\n      templateUrl: '/common/directives/coverImage/coverImage.directive.html'\n    };\n  }\n})();\n","(function(){\n  angular\n    .module('PortfolioSPAModule')\n    .directive('imageLightbox', imageLightbox);\n\n  function imageLightbox(){\n    return{\n      restrict:'EA',\n      scope:{\n        content: '=content'\n      },\n      templateUrl: '/common/directives/imageLightbox/imageLightbox.directive.html'\n    };\n  }\n})();\n","(function(){\n  angular\n    .module('PortfolioSPAModule')\n    .controller('imageGalleryController', imageGalleryController)\n    .directive('imageGallery', imageGallery);\n\n  function imageGallery(){\n    return{\n      restrict:'EA',\n      scope:{\n        content: '=content',\n        selectedImage: '=selectedImage'\n      },\n      templateUrl: '/common/directives/imageGallery/imageGallery.directive.html',\n      controller: imageGalleryController,\n      controllerAs: 'ctrl'\n    };\n  }\n\n  ///\n  /// Define a controller for this image gallery to use.\n  ///\n  imageGalleryController.$inject = ['$scope', '$window'];\n  function imageGalleryController($scope, $window){\n    var ctrl = this;\n    var tinyScreenMax = 600;\n    var smallScreenMax = 650;\n    var mediumScreenMax = 1000;\n    // Never really want more than 4 columns or balance starts to look shit.\n    ctrl.lightboxImage = \"\";\n\n    ctrl.GalleryThumbClick = function(image){\n      // Set modal image\n      $scope.selectedImage = image;\n    };\n\n    angular.element($window).bind('resize', function () {\n      console.log(\"resizing\");\n      // Possiblity to cache here... if necessary.\n      ctrl.imageThumbs = FormatImageList($scope.content); // format images with new number of columns based on screen size.\n      $scope.$apply(); // This is needed here... will occasionally update on its own.\n    });\n\n    var GetNumberOfColumns = function(){\n      var numCols = 2;\n\n      //if($window.innerWidth > tinyScreenMax){\n        numCols = 2;\n      //}\n      if($window.innerWidth > smallScreenMax){\n        numCols = 3;\n      }\n      if($window.innerWidth > mediumScreenMax){\n        numCols = 4;\n      }\n\n      return numCols;\n    };\n\n    var FormatImageList = function(images){\n      var columns = [];\n      var numColumns = GetNumberOfColumns();\n      var rows = Math.ceil(images.length / numColumns);\n\n      var imagesIndex = 0;\n      for (var y = 0; y < rows; y++) {\n        for(var x = 0; x < numColumns; x++, imagesIndex++){\n          if(columns[x] === undefined){\n            columns.push([]);\n          }\n\n          // Break if no projects remaining.\n          if(imagesIndex === images.length) break;\n\n          columns[x].push(images[ imagesIndex ]);\n        }\n      }\n\n      return columns;\n    };\n\n    ctrl.imageThumbs = FormatImageList($scope.content);\n  }\n\n})();\n","(function(){\n  angular\n    .module('PortfolioSPAModule')\n    .directive('embededVideo', embededVideo);\n\n  function embededVideo(){\n    return{\n      restrict:'EA',\n      scope:{\n        embededUrl: '=embededUrl'\n      },\n      templateUrl: '/common/directives/embededVideo/embededVideo.directive.html'\n    };\n  }\n})();\n","(function(){\n  angular\n    .module('PortfolioSPAModule')\n    .directive('navigationBar', navigationBar);\n\n  function navigationBar(){\n    return{\n      restrict:'EA',\n      templateUrl: '/common/directives/navigationBar/navigationBar.directive.html'\n    };\n  }\n})();\n","(function(){\n  angular\n    .module('PortfolioSPAModule')\n    .directive('underlinePageBreak', underlinePageBreak);\n\n  function underlinePageBreak(){\n    return{\n      restrict:'EA',\n      templateUrl: '/common/directives/pageBreak/underline.directive.html'\n    };\n  }\n})();\n","(function(){\n  angular\n    .module('PortfolioSPAModule')\n    .directive('textBlock', textBlock);\n\n  function textBlock(){\n    return{\n      restrict:'EA',\n      scope:{\n        content: '=content'\n      },\n      templateUrl: '/common/directives/textBlock/textBlock.directive.html'\n    };\n  }\n})();\n"],"sourceRoot":"/source/"}